{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","value","querySelector","showMessage","reddit","results","output","forEach","post","image","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"finddit.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    //prettier-ignore\n    return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\n    .then(res => res.json()) // parse result into json data format\n    .then(json => json.data.children.map(data => data.data))\n    .catch(err => console.log(err));\n  }\n};\n","import reddit from \"./redditapi\";\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\n////////////////////////////////////////////////////////////\n// Form event listener\n////////////////////////////////////////////////////////////\n\nsearchForm.addEventListener(\"submit\", e => {\n  // Get search term\n  const searchTerm = searchInput.value;\n  // Get sort value...from radio button\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n  // Get search limit from select element field\n  const searchLimit = document.getElementById(\"limit\").value;\n\n  // Check input field\n  if (searchTerm === \"\") {\n    // Show an error message\n    showMessage(\"Please add a search term.\", \"alert-danger\");\n  }\n\n  // Clear input field\n  searchInput.value = \"\";\n\n  // Search reddit api\n\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    // Use this console.log to test the returned data in  your console\n    //console.log(results);\n\n    // Injecting results into UI\n    let output = '<div class=\"card-columns\">';\n\n    // loop through posts\n    results.forEach(post => {\n      // Check if post object contains images for singular post\n      const image = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://cdn.searchenginejournal.com/wp-content/uploads/2015/11/2015-11-11_10-15-49.jpg\";\n\n      // Output bootstrap card\n      output += `\n        <div class=\"card\">\n        <img src=\"${image}\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">${post.title}</h5>\n            <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n            <a href=\"${\n              post.url\n            }\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n            <hr>\n            <span class=\"badge badge-secondary\">Subreddit: ${\n              post.subreddit\n            }</span>\n            <span class=\"badge badge-dark\">Score: ${post.score}</span>\n          </div>\n        </div>\n        `;\n    });\n\n    output += \"</div>\";\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  e.preventDefault(); // prevents form from actually submitting to a file\n});\n\n////////////////////////////////////////////////////////////\n// Show error message function\n////////////////////////////////////////////////////////////\n\nfunction showMessage(message, className) {\n  // Create opening div to inject into html file\n  const div = document.createElement(\"div\");\n  // Add classes to div to display error message in red\n  div.className = `alert ${className}`;\n  // Add message from above argument\n  div.appendChild(document.createTextNode(message));\n  // Get parent container\n  const searchContainer = document.getElementById(\"search-container\");\n  // Get search\n  const search = document.getElementById(\"search\");\n  // Insert div before our search element\n  searchContainer.insertBefore(div, search);\n  // Remove div from UI after 3 seconds ...\"timeout alert\"\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\n}\n\n////////////////////////////////////////////////////////////\n// Truncate text function\n// \"Only display certain number of characters\"\n////////////////////////////////////////////////////////////\n\n// pass in text and limit the amount of characters\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(\" \", limit);\n  if (shortened == -1) return text;\n  return text.substring(0, shortened);\n}\n"]}